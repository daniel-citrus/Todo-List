/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
button,
video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

html,
body {
    height: 100%;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}

body {
    line-height: 1;
}

ol,
ul {
    list-style: none;
}

blockquote,
q {
    quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

button {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    text-align: start;
    border-radius: var(--border-radius);

    background: var(--grey-0);
    padding: 10px;
    cursor: pointer;
}

/* End CSS Reset */

:root {
    --background: white;
    --grey-0: #fafafa;
    --grey-1: #eeeeee;
    --grey-2: #e2e2e2;
    --grey-3: #d4d4d4;
    --grey-4: #c9c9c9;
    --grey-5: #b6b6b6;
    --grey-6: #a3a3a3;
    --grey-7: #929292;
    --grey-8: #797979;
    --border: 1px solid var(--grey-0);
    --border-radius: 5px;
    --primary-color: #3289ef;
}

@font-face {
    font-family: poppins_regular;
    src: url(../style/fonts/Poppins/Poppins-Regular.ttf);
}

body {
    overflow: hidden;
    background-color: red;
    font-size: 1.4rem;
    font-family: poppins_regular, Verdana, sans-serif;
}

header {
    display: grid;
    grid-template: auto / auto 1fr;
    justify-items: center;
    align-items: center;
    padding: 8px;
    position: sticky;
    top: 0;
    background: var(--primary-color);

    .logo {
        font-size: 2.3rem;
    }

    .mobileNavSwitch {
        justify-self: start;
        height: 40px;
        width: 40px;
    }
}

.content {
    position: relative;
}

.main {
    height: 100%;
    display: grid;
    grid-template: auto 1fr/auto;

    button:hover {
        background: var(--grey-2);
        transition: all 0.5s ease-out;
    }
}

.popperOverlay {
    z-index: 100;
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    background: rgba(255, 0, 0, 0.158);

    display: flex;
    justify-content: center;
    align-items: center;

    &.hidden {
        display: none;
    }

    .hidden {
        display: none;
    }

    .projectDetails,
    .taskDetails {
        background: var(--background);
        padding: 15px 10px;
        border-radius: var(--border-radius);
    }

    .projectMenuButtons,
    .taskMenuButtons {
        position: fixed;
        padding: 5px;
        background: var(--background);
        display: flex;
        flex-flow: column nowrap;
    }
}

.projects {
    position: absolute;
    padding: 10px;
    width: calc(100% - 16px);
    height: calc(100% - 16px);
    z-index: 1;
    overflow-y: auto;
    display: flex;
    flex-flow: column nowrap;
    gap: 3px;
    transition: .2s ease-out;
    transform: translateX(0%);

    &>button {
        padding: 10px;
        height: 50px;
        box-sizing: content-box;
    }

    &.hidden {
        transition: .2s ease-out;
        transform: translateX(-100%);
        position: fixed;
    }

    .defaultButtons {
        display: flex;
        flex-flow: column nowrap;
        gap: 3px;
        transition: all 0.5s ease-out;

        button {
            padding: 10px;
            height: 50px;
            box-sizing: content-box;
        }
    }

    .project {

        &.selected,
        &.selected:hover {
            background-color: var(--grey-3);

            .options {
                background-color: var(--grey-3);
            }

            .options:hover {
                background: var(--grey-2);
            }
        }

        &:hover {
            background: var(--grey-2);

            button.options {
                background: var(--grey-2);
            }

            button.options:hover {
                background-color: var(--grey-1);
            }
        }

    }

    &>button,
    .defaultButtons button {
        font-size: 1.2rem;
    }
}

.project {
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    border-radius: var(--border-radius);
    align-items: center;
}

.projects,
.tasks {
    font-size: 1.2rem;
    line-height: 1.6rem;
    background: var(--grey-0);

    .options {
        transition: all 0.5s ease-out;
        background: var(--grey-0);
    }
}

.project,
.task {
    user-select: none;
    transition: all 0.5s ease-out;

    &:hover {

        .threedots {
            transition: all 0.5s ease-out;
            border-color: black;

            &::after,
            &::before {
                transition: all 0.5s ease-out;
                border-color: black;
            }
        }
    }

    .options {
        border-radius: var(--border-radius);
        height: 50px;
        width: 50px;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
    }
}

.task {
    display: grid;
    grid-template: auto / auto 1fr auto;
    gap: 10px;
    border-radius: var(--border-radius);
    cursor: pointer;
    align-items: center;
    padding: 5px 10px;

    &:hover {
        background: var(--grey-2);

        .completeTask,
        .options {
            background: var(--grey-2);

            &:hover {
                background: var(--grey-1);
            }
        }
    }

    .description {
        color: #555;
        font-size: 0.9rem;
    }

    .description,
    .title {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .dueDate {
        color: var(--primary-color);
        font-size: 0.9rem;
    }

    .information {
        display: flex;
        flex-flow: column nowrap;
        overflow: hidden;
    }
}

.tasks {
    position: absolute;
    overflow-y: auto;
    height: 100%;
    width: 100%;

    .completeTask {
        height: 50px;
        width: 50px;
        transition: all 0.5s ease-out;
    }

    .task[data-completed="true"] {

        .completeTask,
        .completeTask:hover {
            background: rgba(0, 128, 0, 0.253);
        }
    }

    .taskList {
        display: flex;
        flex-flow: column nowrap;
        gap: 10px;
        padding: 10px;
    }
}

.threedots {
    position: absolute;
    border-radius: 100%;
    border: 2.5px solid var(--grey-6);
    display: flex;
    justify-content: center;
    align-items: center;

    &::before,
    &::after {
        content: '';
        border: 2.5px solid var(--grey-6);
        border-radius: 100%;
        position: absolute;
    }

    &::before {
        right: 5px;
    }

    &::after {
        left: 5px;
    }
}

/* 320px — 480px
iPads, Tablets – 481px — 768px
Small screens, laptops – 769px — 1024px
Desktops, large screens – 1025px — 1200px
Extra large screens, TV – 1201px, and more */

@media screen and (min-width: 481px) {
    .tasks {
        background: red;
    }

    .popperOverlay {

        .projectMenuButtons,
        .taskMenuButtons {}
    }
}

@media screen and (min-width: 769px) {
    .tasks {
        background: green;
    }

    header {
        grid-template: auto / auto;

        .mobileNavSwitch {
            display: none;
        }
    }

    .main {
        grid-template: 50px calc(100% - 50px)/auto;
    }

    .content {
        display: grid;
        grid-template: auto / minmax(100px, 1fr) 2fr;
    }

    .projects {
        position: static;

        &.hidden {
            position: static;
            transform: none;
        }
    }

    .tasks {
        position: static;
    }
}

@media screen and (min-width: 1025px) {
    .tasks {
        background: orange;
    }

    .content {
        display: grid;
        grid-template: auto/minmax(300px, 1fr) 5fr;
    }
}