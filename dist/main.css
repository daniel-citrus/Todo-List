/*!***************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/style/style.scss ***!
  \***************************************************************************************************************/
@charset "UTF-8";
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
button,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

html,
body {
  height: 100%;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  text-align: start;
  border-radius: var(--border-radius);
  background: var(--grey-0);
  padding: 10px;
}

/* End CSS Reset */
:root {
  --background: white;
  --grey-0: #fafafa;
  --grey-1: #e7e7e7;
  --grey-2: #dddddd;
  --grey-3: #cfcfcf;
  --grey-4: #c2c2c2;
  --border: 1px solid var(--grey-0);
  --border-radius: 5px;
  --primary-color: #3289ef;
}

body {
  overflow: hidden;
  font-size: 1.4rem;
}

header {
  display: grid;
  grid-template: auto/auto 1fr;
  justify-items: center;
  align-items: center;
  padding: 8px;
  position: sticky;
  top: 0;
  background: var(--primary-color);
}
header .logo {
  font-size: 2.3rem;
}
header .mobileNavSwitch {
  justify-self: start;
  height: 40px;
  width: 40px;
}

.content {
  position: relative;
}

.main {
  height: 100%;
  display: grid;
  grid-template: auto 1fr/auto;
}
.main button:hover {
  background: var(--grey-2);
}

.popperOverlay {
  z-index: 100;
  position: absolute;
  top: 0;
  height: 100%;
  width: 100%;
  background: rgba(255, 0, 0, 0.158);
  display: flex;
  justify-content: center;
  align-items: center;
}
.popperOverlay.hidden {
  display: none;
}
.popperOverlay .hidden {
  display: none;
}
.popperOverlay .projectDetails,
.popperOverlay .taskDetails {
  background: var(--background);
  padding: 15px 10px;
  border-radius: var(--border-radius);
}
.popperOverlay .projectMenuButtons,
.popperOverlay .taskMenuButtons {
  position: fixed;
  padding: 5px;
  background: var(--background);
  display: flex;
  flex-flow: column nowrap;
}

.projects {
  position: absolute;
  padding: 8px;
  width: calc(100% - 16px);
  height: calc(100% - 16px);
  z-index: 1;
  background: var(--grey-0);
  overflow-y: auto;
  display: flex;
  flex-flow: column nowrap;
  gap: 3px;
  transition: 0.2s ease-out;
  transform: translateX(0%);
}
.projects button:hover {
  background: var(--grey-2);
}
.projects button:hover .options {
  background: var(--grey-2);
}
.projects button:hover .options:hover {
  background-color: var(--grey-1);
}
.projects .options {
  background: var(--grey-0);
}
.projects.hidden {
  transition: 0.2s ease-out;
  transform: translateX(-100%);
  position: fixed;
}
.projects .defaultButtons {
  display: flex;
  flex-flow: column nowrap;
  gap: 3px;
}
.projects .selected,
.projects .selected:hover {
  background-color: var(--grey-3);
}
.projects .selected .options,
.projects .selected:hover .options {
  background-color: var(--grey-3);
}

.project {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  border-radius: var(--border-radius);
  align-items: center;
  padding: 10px;
  height: 50px;
  box-sizing: content-box;
}

.project .options,
.task .options {
  border-radius: var(--border-radius);
  height: 50px;
  width: 50px;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
.project .options .threedots,
.task .options .threedots {
  position: absolute;
  border-radius: 100%;
  border: 2.5px solid black;
  display: flex;
  justify-content: center;
  align-items: center;
}
.project .options .threedots::before, .project .options .threedots::after,
.task .options .threedots::before,
.task .options .threedots::after {
  content: "";
  border-radius: 100%;
  position: absolute;
  border: 2.5px solid black;
}
.project .options .threedots::before,
.task .options .threedots::before {
  right: 5.5px;
}
.project .options .threedots::after,
.task .options .threedots::after {
  left: 5.5px;
}
.project:hover .threedots,
.task:hover .threedots {
  border-color: black;
}
.project:hover .threedots::before, .project:hover .threedots::after,
.task:hover .threedots::before,
.task:hover .threedots::after {
  border-color: black;
}

.tasks {
  position: absolute;
  overflow-y: auto;
  height: 100%;
  width: 100%;
}
.tasks .completeTask {
  height: 50px;
  width: 50px;
}
.tasks .task {
  display: grid;
  grid-template: auto/auto 1fr auto;
  gap: 10px;
}
.tasks .task[data-completed=true] {
  background: rgba(0, 128, 0, 0.253);
}
.tasks .taskList {
  display: flex;
  flex-flow: column nowrap;
  gap: 10px;
  padding: 10px;
}

/* 320px — 480px
iPads, Tablets – 481px — 768px
Small screens, laptops – 769px — 1024px
Desktops, large screens – 1025px — 1200px
Extra large screens, TV – 1201px, and more */
@media screen and (min-width: 481px) {
  body {
    background: red;
  }
}
@media screen and (min-width: 769px) {
  body {
    background: green;
  }
  header {
    grid-template: auto/auto;
  }
  header .mobileNavSwitch {
    display: none;
  }
  .main {
    grid-template: 50px calc(100% - 50px)/auto;
  }
  .content {
    display: grid;
    grid-template: auto/minmax(100px, 1fr) 2fr;
  }
  .projects {
    position: static;
  }
  .projects.hidden {
    position: static;
    transform: none;
  }
  .tasks {
    position: static;
  }
}
@media screen and (min-width: 1025px) {
  body {
    background: orange;
  }
  .content {
    display: grid;
    grid-template: auto/minmax(300px, 1fr) 5fr;
  }
}
